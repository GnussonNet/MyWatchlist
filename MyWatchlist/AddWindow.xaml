<Window x:Class="MyWatchlist.AddWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyWatchlist"
        mc:Ignorable="d"
        WindowStyle="None"
        Background="{DynamicResource Background}"
        Title="Add stock" ResizeMode="NoResize" Height="412" Width="300">

    <!--Add the WindowChrome object-->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="34"
        CornerRadius="0"
        GlassFrameThickness="0"
        NonClientFrameEdges="None"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>

            <SolidColorBrush x:Key="Background" Color="#fff" />
            <SolidColorBrush x:Key="Header" Color="#005DA7" />
            <SolidColorBrush x:Key="TextHigh" Color="#DDFFFFFF" />
            <SolidColorBrush x:Key="TextLow" Color="#99FFFFFF" />
            <SolidColorBrush x:Key="TextDisable" Color="#60FFFFFF" />
            <SolidColorBrush x:Key="ButtonBorder" Color="#FF373737" />
            <SolidColorBrush x:Key="ButtonHover" Color="#0AFFFFFF" />
            <SolidColorBrush x:Key="Layer1" Color="#0CFFFFFF" />
            <SolidColorBrush x:Key="Layer2" Color="#11FFFFFF" />
            <SolidColorBrush x:Key="Layer3" Color="#14FFFFFF" />
            <SolidColorBrush x:Key="Layer4" Color="#16FFFFFF" />
            <SolidColorBrush x:Key="Layer5" Color="#1CFFFFFF" />
            <SolidColorBrush x:Key="Layer6" Color="#1EFFFFFF" />
            <SolidColorBrush x:Key="Layer7" Color="#23FFFFFF" />
            <SolidColorBrush x:Key="Layer8" Color="#26FFFFFF" />
            <SolidColorBrush x:Key="Layer9" Color="#28FFFFFF" />

            <!--Base style for title bar buttons-->
            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="{DynamicResource Header}" Width="45.5" Height="30">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="{DynamicResource TextHigh}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ButtonHover}"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource TextHigh}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Close-->
            <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE8BB;"/>
            </Style>


            <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#ABADB3" />
            <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
            <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
            <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

            <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
                <Grid Height="28">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="28" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border" BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" CornerRadius="0" BorderThickness="2, 2, 2, 2" Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                    <Border Grid.Column="1" Margin="2, 2, 2, 2" BorderBrush="#ABADB3" Name="ButtonBorder" CornerRadius="0, 0, 0, 0" BorderThickness="0" Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                    <Path Name="Arrow" Grid.Column="1" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" Fill="#444" VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                        <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ItemStyle" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="gd" Padding="4" Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}},Path=Background}">

                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="#005DA7"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource ItemStyle}" ></Setter>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                                <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" >
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox" >
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Popup showing items -->
                                <Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border Name="DropDownBorder" Background="White" Margin="0, 0, 0, 0" CornerRadius="0" BorderThickness="2 0 2 2" BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                        <ScrollViewer Margin="4 2 4 4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#005DA7"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#005DA7"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#005DA7"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>

            <Style x:Key="ListViewContainerStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="White"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="White"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="White"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </ResourceDictionary>
    </Window.Resources>

    <!--Title bar button commands-->
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Close" />
    </Window.CommandBindings>

    <Border x:Name="MainWindowBorder" BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="2" >
        <Grid x:Name="parentContainer" Background="{DynamicResource Background}">

            <Grid.RowDefinitions>
                <RowDefinition Height ="Auto"/>
                <RowDefinition Height ="*"/>
                <!--<RowDefinition Height ="30"/>-->
            </Grid.RowDefinitions>

            <!--Title bar-->
            <Grid Grid.Row="0" Height="30" Background="{DynamicResource Header}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <!--App icon-->
                    <!--<Image Source="/Resources/watermelon.ico" Width="18" Margin="7,2,2,2" HorizontalAlignment="Left" VerticalAlignment="Center" />-->
                    <!--Title with icon-->
                    <!--<TextBlock Text="Borderless" Foreground="{DynamicResource TextHigh}" FontFamily="Arial" Margin="4 0 0 0" />-->
                    <TextBlock Text="MyWatchlist" Foreground="{DynamicResource TextHigh}" FontFamily="Arial" Margin="11 0 0 0" />
                </StackPanel>

                <!--Caption buttons-->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                    <Button Style="{StaticResource CloseButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Close"
                            Command="{x:Static SystemCommands.CloseWindowCommand}"/>
                </StackPanel>
            </Grid>

            <!--App content-->
            <Grid Background="#fcfcfc" Grid.Row="1" x:Name="AppArea">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="28" />
                    <RowDefinition Height="10" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>

                <Label Content="Name" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"  Padding="0,5,5,5"></Label>
                <TextBox x:Name="txtName" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="0 0 0 0" BorderThickness="2" SelectionBrush="{DynamicResource Header}" Padding="4" ></TextBox>

                <Label Content="Ticker" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Padding="0,5,5,5"></Label>
                <TextBox x:Name="txtTicker" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" Margin="0 0 0 0" BorderThickness="2" SelectionBrush="{DynamicResource Header}" Padding="4" ></TextBox>

                <Label Content="Average Price" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" Padding="0,5,5,5"></Label>
                <TextBox x:Name="txtAvgPrice" Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="2" Margin="0 0 0 0" BorderThickness="2" SelectionBrush="{DynamicResource Header}" Padding="4" KeyDown="txtAvgPrice_KeyDown" ></TextBox>

                <Label Content="Shares" Grid.Row="10" Grid.ColumnSpan="2" Grid.Column="1"  Padding="0,5,5,5"></Label>
                <TextBox x:Name="txtShares" Grid.Row="11" Grid.Column="1" Grid.ColumnSpan="2" Margin="0 0 0 0" BorderThickness="2" SelectionBrush="{DynamicResource Header}" Padding="4" KeyDown="txtShares_KeyDown" ></TextBox>

                <Label Content="Watchlist" Grid.Row="13" Grid.Column="1" Grid.ColumnSpan="2" Padding="0,5,5,5"></Label>
                <ComboBox x:Name="cbWL" Style="{DynamicResource ComboBoxFlatStyle}" Grid.Row="14" Grid.Column="1" Grid.ColumnSpan="2" SelectedIndex="0"/>

                <Button x:Name="btnCancel" Grid.Row="16" Margin="0 0 5 0" Grid.Column="1" Content="Cancel" BorderThickness="0" Cursor="Hand" Foreground="{DynamicResource Background}" Click="btnCancel_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="#FFA70000"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFAA0A0A"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnAdd" Grid.Row="16" Margin="5 0 0 0" Grid.Column="2" Content="Add" BorderThickness="0" Cursor="Hand" Foreground="{DynamicResource Background}" Click="btnAdd_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{DynamicResource Header}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#0A63AA"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

        </Grid>
    </Border>
    
</Window>
