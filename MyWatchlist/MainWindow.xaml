<Window x:Class="MyWatchlist.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyWatchlist"
        xmlns:Converters="clr-namespace:MyWatchlist.Converters"
        mc:Ignorable="d"
        WindowStyle="None"
        Title="MyWatchlist"
        Background="{DynamicResource Background}"
        MinHeight="400" Height="500"
        MinWidth="700" Width="900" >

    <!--Add the WindowChrome object-->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="34"
        CornerRadius="0"
        GlassFrameThickness="0"
        NonClientFrameEdges="None"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Dictionaries/DefaultDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Converters:DoubleToColorConverter x:Key="doubleToColorConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <!--Title bar button commands-->
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Close" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Maximize" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Minimize" />
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Restore" />
    </Window.CommandBindings>

    <Border x:Name="MainWindowBorder" BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1" >
        <Grid x:Name="parentContainer" Background="{DynamicResource Background}">

            <Grid.RowDefinitions>
                <RowDefinition Height ="Auto"/>
                <RowDefinition Height ="*"/>
                <!--<RowDefinition Height ="30"/>-->
            </Grid.RowDefinitions>

            <!--Title bar-->
            <Grid Grid.Row="0" Height="30" Background="{DynamicResource Header}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <!--App icon-->
                    <!--<Image Source="/Resources/watermelon.ico" Width="18" Margin="7,2,2,2" HorizontalAlignment="Left" VerticalAlignment="Center" />-->
                    <!--Title with icon-->
                    <!--<TextBlock Text="Borderless" Foreground="{DynamicResource TextHigh}" FontFamily="Arial" Margin="4 0 0 0" />-->
                    <TextBlock Text="MyWatchlist" Foreground="{DynamicResource TextHigh}" FontFamily="Arial" Margin="11 0 0 0" />
                </StackPanel>

                <!--Caption buttons-->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                    <Button Style="{StaticResource MinimizeButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Minimize"
                            Command="{x:Static SystemCommands.MinimizeWindowCommand}"/>
                    <Button x:Name="RestoreButton" Visibility="Collapsed" Style="{StaticResource RestoreButtonStyle}" 
                            Command="{x:Static SystemCommands.RestoreWindowCommand}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Restore"/>
                    <Button x:Name="MaximizeButton" Visibility="Visible" Style="{StaticResource MaximizeButtonStyle}" 
                            Command="{x:Static SystemCommands.MaximizeWindowCommand}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Maximize" />
                    <Button Style="{StaticResource CloseButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Close"
                            Command="{x:Static SystemCommands.CloseWindowCommand}"/>
                </StackPanel>
            </Grid>

            <!--App content-->
            <Grid Background="#fcfcfc" Grid.Row="1" x:Name="AppArea">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32px" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!--<Grid x:Name="pnlLoading" Background="{DynamicResource Header}" Visibility="Visible" Panel.ZIndex="999" Grid.ColumnSpan="10" Grid.RowSpan="10" >
                    
                </Grid>-->

                <Grid Background="{DynamicResource Header}" Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="32px" />
                        <ColumnDefinition Width="32px" />
                        <ColumnDefinition Width="32px" />
                        <ColumnDefinition Width="32px" />
                        <ColumnDefinition Width="32px" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="1" BorderThickness="0" FontFamily="Segoe MDL2 Assets" Content="&#xE8E5;" FontSize="16" Foreground="{DynamicResource Background}" Cursor="Hand" Click="btnOpen_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="{DynamicResource Header}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonHover}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="2" BorderThickness="0" FontFamily="Segoe MDL2 Assets" Content="&#xE74E;" FontSize="16" Foreground="{DynamicResource Background}" Cursor="Hand" Click="btnSave_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="{DynamicResource Header}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonHover}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="3" BorderThickness="0" FontFamily="Segoe MDL2 Assets" Content="&#xE710;" FontSize="16" Foreground="{DynamicResource Background}" Cursor="Hand" Click="btnAdd_Click" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="{DynamicResource Header}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonHover}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="4" BorderThickness="0" FontFamily="Segoe MDL2 Assets" Content="&#xE74D;" FontSize="16" Foreground="{DynamicResource Background}" Cursor="Hand" Click="btnDelete_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="{DynamicResource Header}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonHover}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="5" BorderThickness="0" FontFamily="Segoe MDL2 Assets" Content="&#xE72C;" FontSize="16" Foreground="{DynamicResource Background}" Cursor="Hand" Click="btnRefresh_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="{DynamicResource Header}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonHover}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--<Button x:Name="btnOpen" Grid.Column="1" Click="btnOpen_Click" FontFamily="Segoe MDL2 Assets" Content="&#xE8E5;" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" Background="{x:Null}" BorderThickness="0" Foreground="#FFFCFCFC" Cursor="Hand" Margin="1,0,0,0" Grid.Row="1"></Button>
                    <Button x:Name="btnSave" Grid.Row="1" Grid.Column="3" Click="btnSave_Click" FontFamily="Segoe MDL2 Assets" Content="&#xE74E;" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Top" Width="20" Height="20" Background="{x:Null}" BorderThickness="0" Foreground="#FFFCFCFC" Margin="1,0,0,0"></Button>
                    <Button x:Name="btnAdd" Grid.Row="1" Grid.Column="5" Click="btnAdd_Click" FontFamily="Segoe MDL2 Assets" Content="&#xE710;" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" Background="{x:Null}" BorderThickness="0" Foreground="#FFFCFCFC"></Button>
                    <Button x:Name="btnDelete" Grid.Row="1" Grid.Column="7" Click="btnDelete_Click" FontFamily="Segoe MDL2 Assets" Content="&#xE74D;" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" Background="{x:Null}" BorderThickness="0" Foreground="#FFFCFCFC"></Button>
                    <Button x:Name="btnRefresh" Grid.Row="1" Grid.Column="9 " Click="btnRefresh_Click" FontFamily="Segoe MDL2 Assets" Content="&#xE72C;" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" Background="{x:Null}" BorderThickness="0" Foreground="#FFFCFCFC"></Button>-->
                </Grid>
                <Grid Grid.Row="1" Margin="10 0 10 0" Grid.ColumnSpan="2">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="211px" MinWidth="150" MaxWidth="350" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="1" Margin="0 0 10 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>

                            <Label Content="New Watchlist" Grid.ColumnSpan="2" Padding="0,5,5,5"></Label>

                            <TextBox x:Name="txtNewList" Grid.Row="1" Margin="0 0 5 0" BorderThickness="2" SelectionBrush="{DynamicResource Header}" Padding="4" ></TextBox>
                            <Button x:Name="btnAddWL" Grid.Row="1" Margin="5 0 0 0" Grid.Column="1" Content="Add" BorderThickness="0" Click="btnAddWL_Click" Cursor="Hand" Foreground="{DynamicResource Background}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="{DynamicResource Header}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#0A63AA"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>

                        <Grid Margin="0 10 0 10" Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Label Content="Watchlists" Padding="0,5,5,5"></Label>
                            <ComboBox x:Name="cbLists" Style="{DynamicResource ComboBoxFlatStyle}" Grid.Row="1" SelectionChanged="cbLists_SelectionChanged" SelectedIndex="0"/>

                            <Label Content="Stocks" Grid.Row="2" Margin="0 10 0 0" Padding="0,5,5,5"></Label>
                            <ListView x:Name="lstStocks" Grid.Row="3" BorderThickness="0" ItemContainerStyle="{DynamicResource ListViewContainerStyle}">
                                <!--<ListViewItem>Hej</ListViewItem>-->
                            </ListView>

                        </Grid>

                    </Grid>

                    <GridSplitter Grid.Row="1" Grid.Column="0" BorderThickness="1" BorderBrush="#7F005DA7"/>

                    <!--Datagrid-->
                    <DataGrid x:Name="dgStocks" HorizontalGridLinesBrush="{DynamicResource Header}" VerticalGridLinesBrush="{DynamicResource Header}" RowHeaderWidth="0" AutoGenerateColumns="False"  Grid.Row="1" Grid.Column="1" Margin="10 10 0 10" BorderBrush="{DynamicResource Header}" BorderThickness="0" Background="{DynamicResource Background}" SelectedIndex="0">
                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}" >
                                <Setter Property="Background" Value="{DynamicResource Header}" />
                                <Setter Property="Foreground" Value="{DynamicResource Background}" />
                                <Setter Property="BorderBrush" Value="#3EFFFFFF"/>
                                <Setter Property="BorderThickness" Value="1 1 1 1"/>
                                <Setter Property="Margin" Value="-1,-1,0,0" />
                                <Setter Property="Height" Value="28" />
                                <Setter Property="Width" Value="auto"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=name}" MinWidth="50" Width="auto" />
                            <DataGridTextColumn Header="Ticker" Binding="{Binding Path=ticker}" MinWidth="50" Width="auto"/>
                            <DataGridTextColumn Header="Average Price" Binding="{Binding Path=avgPrice}" Width="85"/>
                            <DataGridTextColumn Header="Shares" Binding="{Binding Path=shares}" MinWidth="50" Width="auto"/>
                            <DataGridTextColumn Header="Current Price" Binding="{Binding Path=currentPrice}" MinWidth="85" Width="auto"/>
                            <DataGridTextColumn Header="Gain Today (kr)" Binding="{Binding Path=todayGainV}" MinWidth="95" Width="auto">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{Binding Path=todayGainV, Converter={StaticResource doubleToColorConverter}}" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Gain Today (%)" Binding="{Binding Path=todayGainP}" MinWidth="96" Width="auto">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{Binding Path=todayGainP, Converter={StaticResource doubleToColorConverter}}" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!--<Grid Grid.Row="2" Grid.ColumnSpan="2" Height="26" Margin="-10 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" x:Name="lblOmx" Content="" HorizontalContentAlignment="Center" Background="{DynamicResource Header}" Foreground="White"></Label>
                        <Label Grid.Column="1" x:Name="lblOmxspi" Content="" HorizontalContentAlignment="Center" Background="{DynamicResource Header}" Foreground="White"></Label>
                        <Label Grid.Column="2" x:Name="lblNasdaq" Content="" HorizontalContentAlignment="Center" Background="{DynamicResource Header}" Foreground="White"></Label>
                        <Label Grid.Column="3" x:Name="lblSp500" Content="" HorizontalContentAlignment="Center" Background="{DynamicResource Header}" Foreground="White"></Label>
                    </Grid>-->

                </Grid> 
            </Grid>

        </Grid>
    </Border>
</Window>